About This Fork of JSLint
-------------------------

This is my fork of Douglas Crockford's JSLint tool.

I'll be adding features that are primarily of use to me.  I'll be
adding features I would like Mr. Crockford to add as well.  Features
include:

- the 'infixin' option, which allows you to use the infix 'in'
  operator.  I made this while dealing with some code that had an
  instance of that operator that I didn't feel like dealing with at
  that time.

Planned/wishlist features and/or bugfixes:

- Blank lines aren't included in the line number counter, so error and
  warning messages include incorrect line numbers.  This applies even
  when the 'white' option is set.  My opinion is that blank lines
  should be allowed even when 'white' is not set.

This repos also contains my implementation of jslint-for-wsh as a
Windows Script File (along with a separate .js file for the added
code), though I should probably create a separate repos for it (or a
fork of jslint-for-wsh).  I believe it is easier to maintain and more
robust than the original jslint-for-wsh because it keeps the jslint
code separate from the approximately 50 lines of wrapper code that
jslint-for-wsh adds.  The official site for the jslint-for-wsh project
is:

	http://code.google.com/p/jslint-for-wsh/

Original JSLint README
----------------------

JSLint, The JavaScript Code Quality Tool

Douglas Crockford
douglas@crockford.com

2012-02-21

jslint.js contains the fully commented global JSLINT function.

jslint.html runs the JSLINT function in a web page. The page also depends
on adsafe.js [www.ADsafe.org] and json2.js [www.JSON.org] (which are not
included in this project) and intercept.js and init_ui.js (which are). The
js files should all be minified, and all except init_ui.js are concatenated
together to form web_jslint.js.

adsafe.js       https://github.com/douglascrockford/ADsafe
json2.js        https://github.com/douglascrockford/JSON-js

intercept.js augments ADsafe, giving widgets access to the clock, cookies,
and the JSLINT function.

init_ui.js hooks the HTML ui components to ADsafe.

lint.html describes JSLint's usage. Please read it.

Direct questions and comments to http://tech.groups.yahoo.com/group/jslint_com/.

JSLint can be run anywhere that JavaScript (or Java) can run. See for example
http://tech.groups.yahoo.com/group/jslint_com/database?method=reportRows&tbl=1

The place to express yourself in programming is in the quality of your ideas,
and the efficiency of execution. The role of style is the same as in
literature. A great writer doesn't express himself by putting the spaces
before his commas instead of after, or by putting extra spaces inside his
parentheses. A great writer will slavishly conform to some rules of style,
and that in no way constrains his power to express himself creatively.
See for example William Strunk's The Elements of Style
[http://www.crockford.com/wrrrld/style.html].

This applies to programming as well. Conforming to a consistent style
improves readability, and frees you to express yourself in ways that matter.
JSLint here plays the part of a stern but benevolent editor, helping you to
get the style right so that you can focus your creative energy where it is
most needed.
